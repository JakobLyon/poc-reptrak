{"ast":null,"code":"var _jsxFileName = \"/Users/pbodduluri/WebstormProjects/poc-reptrak-master/src/components/Grid/Grid.js\";\nimport React, { createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nexport const GridContext = createContext();\nexport const Grid = ({\n  children,\n  cols,\n  rows\n}) => {\n  let gridColumns = `[col1-start] 1fr `;\n  let gridRows = `[row1-start] auto `;\n\n  for (let i = 2; i <= cols; i++) {\n    gridColumns += `[col${i}-start] 1fr `;\n  }\n\n  gridColumns += `[col${cols}-end]`;\n\n  for (let j = 2; j <= rows; j++) {\n    gridRows += `[row${j}-start] 1fr `;\n  }\n\n  gridRows += `[row${rows}-end]`;\n  const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: ${gridColumns};\n    grid-template-rows: ${gridRows};\n  `;\n  return React.createElement(GridContext.Provider, {\n    value: {\n      gridColumns: cols,\n      gridRows: rows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, children));\n};\nGrid.propTypes = {\n  cols: PropTypes.number.isRequired,\n  rows: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/pbodduluri/WebstormProjects/poc-reptrak-master/src/components/Grid/Grid.js"],"names":["React","createContext","PropTypes","styled","GridContext","Grid","children","cols","rows","gridColumns","gridRows","i","j","GridContainer","div","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,WAAW,GAAGH,aAAa,EAAjC;AAEP,OAAO,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAChD,MAAIC,WAAW,GAAI,mBAAnB;AACA,MAAIC,QAAQ,GAAI,oBAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,IAArB,EAA2BI,CAAC,EAA5B,EAAgC;AAC9BF,IAAAA,WAAW,IAAK,OAAME,CAAE,cAAxB;AACD;;AACDF,EAAAA,WAAW,IAAK,OAAMF,IAAK,OAA3B;;AAEA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,IAArB,EAA2BI,CAAC,EAA5B,EAAgC;AAC9BF,IAAAA,QAAQ,IAAK,OAAME,CAAE,cAArB;AACD;;AACDF,EAAAA,QAAQ,IAAK,OAAMF,IAAK,OAAxB;AAEA,QAAMK,aAAa,GAAGV,MAAM,CAACW,GAAI;;6BAENL,WAAY;0BACfC,QAAS;GAHjC;AAMA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAEF,IAAf;AAAqBG,MAAAA,QAAQ,EAAEF;AAA/B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBF,QAAhB,CADF,CADF;AAKD,CAxBM;AA0BPD,IAAI,CAACU,SAAL,GAAiB;AACfR,EAAAA,IAAI,EAAEL,SAAS,CAACc,MAAV,CAAiBC,UADR;AAEfT,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBC;AAFR,CAAjB","sourcesContent":["import React, { createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nexport const GridContext = createContext();\n\nexport const Grid = ({ children, cols, rows }) => {\n  let gridColumns = `[col1-start] 1fr `;\n  let gridRows = `[row1-start] auto `;\n  for (let i = 2; i <= cols; i++) {\n    gridColumns += `[col${i}-start] 1fr `;\n  }\n  gridColumns += `[col${cols}-end]`;\n\n  for (let j = 2; j <= rows; j++) {\n    gridRows += `[row${j}-start] 1fr `;\n  }\n  gridRows += `[row${rows}-end]`;\n\n  const GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: ${gridColumns};\n    grid-template-rows: ${gridRows};\n  `;\n\n  return (\n    <GridContext.Provider value={{ gridColumns: cols, gridRows: rows }}>\n      <GridContainer>{children}</GridContainer>\n    </GridContext.Provider>\n  );\n};\n\nGrid.propTypes = {\n  cols: PropTypes.number.isRequired,\n  rows: PropTypes.number.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}